var globals = require('../../globals');
var factory = globals.getFactory();

module.exports = function (node, parent, firstVisit) {
    if (firstVisit) {
        if (globals.getWrapperOfNode(node) !== undefined) {
            return;
        }
        var importSpecifier = factory.createImportSpecifierWrapper();
        globals.setPositionInfo(node, importSpecifier);
        return importSpecifier;
    } else {
        var importSpecifierWrapper = globals.getWrapperOfNode(node);

        if (node.imported != null) {
            var importedWrapper = globals.getWrapperOfNode(node.imported);
            try {
                importSpecifierWrapper.setImported(importedWrapper);
            } catch (e) {
                console.error("IMPORTSPECIFIER - Could not set imported! Reason of the error: " + e + "\n");
            }
        }

        if (node.local != null) {
            var localWrapper = globals.getWrapperOfNode(node.local);
            try {
                importSpecifierWrapper.setLocal(localWrapper);
            } catch (e) {
                console.error("IMPORTSPECIFIER - Could not set local! Reason of the error: " + e + "\n");
            }
        }

    }
}