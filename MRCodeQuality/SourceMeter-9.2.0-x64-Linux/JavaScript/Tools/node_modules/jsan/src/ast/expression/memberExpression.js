var globals = require('../../globals');
var factory = globals.getFactory();

module.exports = function (node, parent, firstVisit) {
    if (firstVisit) {
        if (globals.getWrapperOfNode(node) !== undefined) {
            return;
        }
        var memberExpression = factory.createMemberExpressionWrapper();
        globals.setPositionInfo(node, memberExpression);
        memberExpression.setComputed(node.computed);
        return memberExpression;
    } else {
        var memberExpressionWrapper = globals.getWrapperOfNode(node);

        if (node.property != null) {
            var propertyWrapper = globals.getWrapperOfNode(node.property);
            try {
                memberExpressionWrapper.setProperty(propertyWrapper);
            } catch (e) {
                console.error("MEMBEREXPRESSION - Could not set property! Reason of the error: " + e + "\n");
            }
        }

        if (node.object != null) {
            var objectWrapper = globals.getWrapperOfNode(node.object);
            try {
                memberExpressionWrapper.setObject(objectWrapper);
            } catch (e) {
                console.error("MEMBEREXPRESSION - Could not set object! Reason of the error: " + e + "\n");
            }
        }

    }
}